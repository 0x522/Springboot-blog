<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mybatis.example.BlogMapper">
    <select id="selectBlog" resultMap="Blog">
        SELECT
        blog.id as blog_id,
        blog.title as blog_title,
        blog.description as blog_description,
        blog.content as blog_conent,
        blog.updated_at as blog_updated_at,
        blog.created_at as blog_created_at,
        user.id as user_id,
        user.username as user_username,
        user.avatar as user_avatar,
        user.updated_at as user_updated_at,
        user.created_at as user_created_at
        FROM blog
        LEFT OUTER JOIN user
        ON blog.user_id = user.id
        <if test="user_id != null">
            WHERE blog.user_id = #{user_id}
        </if>
        order by blog.updated_at desc
        limit ${offset}, #{limit}
    </select>
    <select id="countBlog" resultType="int">
        select count(*)
        from blog
        <if test="user_id != null">where user_id = #{user_id}</if>
    </select>
    <select id="selectBlogById" resultType="blog.entity.Blog">
        select *
        from blog
        where id = #{id}
    </select>
    <insert id="insertBlog" parameterType="blog.entity.Blog" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        insert into xdml.blog (user_id, title, description, content, created_at, updated_at)
        values (#{userId}, #{title}, #{description}, #{content}, now(), now())
    </insert>
    <update id="updateBlog" parameterType="blog.entity.Blog">
        update xdml.blog
        set title      = #{title},
            content    = #{content},
            description= #{description},
            updated_at = now()
        where id = #{id}
    </update>
    <delete id="deleteBlog" parameterType="int">
        delete
        from blog
        where id = #{id}
    </delete>
    <resultMap id="Blog" type="blog.entity.Blog">
        <id property="id" column="blog_id"/>
        <result property="title" column="blog_title"/>
        <result property="description" column="blog_description"/>
        <result property="content" column="blog_content"/>
        <result property="createdAt" column="blog_created_at"/>
        <result property="updatedAt" column="blog_updated_at"/>
        <association property="user" javaType="blog.entity.User">
            <id property="id" column="user_id"/>
            <result property="username" column="user_username"/>
            <result property="avatar" column="user_avatar"/>
            <result property="createdAt" column="user_created_at"/>
            <result property="updatedAt" column="user_updated_at"/>
        </association>
    </resultMap>
</mapper>